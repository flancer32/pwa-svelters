name: LIVE - Update and Restart the `NutriLog` App

on: workflow_dispatch

env:
  APP_DIR: /home/${{vars.USER}}/inst/app/nutrilog/
  PRJ: nutrilog
  SERVICE: appNutriLog.service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Install dependencies and build the project
        run: |
          npm install --omit=optional
          npm run build-css
          npm prune --omit=dev

      - name: Archive application files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq --exclude=*.git* -r ${{env.PRJ}}.zip ./

      - name: Verify archive creation
        run: ls -lh

      - name: Upload archive as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.PRJ}}-archive
          path: ${{env.PRJ}}.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download archive from previous job
        uses: actions/download-artifact@v4
        with:
          name: ${{env.PRJ}}-archive

      - name: Validate SSH connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{vars.HOST}}
          username: ${{vars.USER}}
          key: ${{secrets.SSH_KEY}}
          script: |
            pwd
            whoami

      - name: Verify downloaded archive
        run: ls -lh

      - name: Deploy archive to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{vars.HOST}}
          username: ${{vars.USER}}
          key: ${{secrets.SSH_KEY}}
          source: ${{env.PRJ}}.zip
          target: ${{env.APP_DIR}}

  release:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Extract and restart application on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{vars.HOST}}
          username: ${{vars.USER}}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd "${{env.APP_DIR}}"
            rm -fr prod.old  
            rm -fr prod.new  
            mkdir prod.new
            unzip ${{env.PRJ}}.zip -d ./prod.new/ &> /dev/null

            source ~/.nvm/nvm.sh
            nvm use node

            TIMESTAMP=$(date +%Y%m%d-%H%M%S)

            sudo /bin/systemctl stop ${{env.SERVICE}}
            node ./prod/bin/tequila.mjs db-export -f data_nutrilog-${TIMESTAMP}.json

            mv ./prod ./prod.old
            mv ./prod.new ./prod
            cp ./prod.old/cfg/local* ./prod/cfg/
            cp ./prod.old/.env ./prod/

            node ./prod/bin/tequila.mjs db-init
            node ./prod/bin/tequila.mjs db-import -f data_nutrilog-${TIMESTAMP}.json

            sudo /bin/systemctl start ${{env.SERVICE}}

            mv ${{env.PRJ}}.zip ${{env.PRJ}}-${TIMESTAMP}.zip
            echo "Archive renamed to: ${{env.PRJ}}-${TIMESTAMP}.zip"
            ls -lh ${{env.APP_DIR}}
