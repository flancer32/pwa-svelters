{
  "openapi": "3.1.0",
  "info": {
    "title": "NutriLog API",
    "version": "1.0.2",
    "description": "API for managing calorie logs in the NutriLog web application."
  },
  "servers": [
    {
      "url": "https://nutrilog.app.wiredgeese.com"
    }
  ],
  "paths": {
    "/app/api/calorie/log/get": {
      "get": {
        "summary": "Retrieve calorie logs for a user within a specified period",
        "description": "This endpoint allows a user to retrieve both draft and finalized calorie logs within a given date range. The response includes logs for both draft and final records.",
        "operationId": "Calorie_Log_Get",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The start date of the period (inclusive). Format: YYYY-MM-DD."
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "The end date of the period (inclusive). Format: YYYY-MM-DD."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the calorie logs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "draftLogs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Calorie_Log"
                      },
                      "description": "Calorie logs for the requested period that are in draft records."
                    },
                    "finalLogs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Calorie_Log"
                      },
                      "description": "Calorie logs for the requested period that are finalized."
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing or invalid date parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app/api/calorie/log/save": {
      "post": {
        "summary": "Save a draft of a calorie log.",
        "description": "This endpoint allows users to save a draft of their calorie log for a specific date, including a list of consumed items.",
        "operationId": "Calorie_Log_Save",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of the calorie log in YYYY-MM-DD format."
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Calorie_Log_Item"
                    },
                    "description": "List of calorie log items."
                  }
                },
                "required": ["date", "items"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calorie log draft saved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Missing or invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required. User does not have an active subscription.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app/api/profile/get": {
      "get": {
        "summary": "Get user profile information.",
        "description": "This endpoint allows users to retrieve their profile information, including metadata and profile details.",
        "operationId": "Profile_Get",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    },
                    "profile": {
                      "$ref": "#/components/schemas/User_Profile"
                    }
                  },
                  "required": ["meta", "profile"],
                  "description": "Response structure for retrieving the user profile, including meta data and profile information."
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Missing or invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app/api/profile/update": {
      "post": {
        "summary": "Update user profile information.",
        "description": "This endpoint updates the user's profile with the provided data.",
        "operationId": "Profile_Update",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile": {
                    "$ref": "#/components/schemas/User_Profile"
                  }
                },
                "required": ["profile"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required. User does not have an active subscription.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/Response_Meta"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Calorie_Log": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date of the calorie log entry."
          },
          "dateCommitted": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the calorie log was committed."
          },
          "totalCalories": {
            "type": "number",
            "description": "Total calories consumed on this date."
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Calorie_Log_Item"
            },
            "description": "List of food items consumed on the given date."
          }
        }
      },
      "Calorie_Log_Item": {
        "type": "object",
        "properties": {
          "food": {
            "type": "string",
            "description": "The name of the consumed food item."
          },
          "quantity": {
            "type": "number",
            "description": "The amount of the food item consumed."
          },
          "measure": {
            "type": "string",
            "enum": ["GRAMS", "MILLILITERS", "PIECES"],
            "description": "The unit of measurement for the food item."
          },
          "unitCalories": {
            "type": "number",
            "description": "The caloric value of the food item per standard unit."
          },
          "totalCalories": {
            "type": "number",
            "description": "The total calories for the consumed quantity, calculated based on quantity and measure."
          }
        }
      },
      "Response_Meta": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The result code depends on the endpoint."
          },
          "message": {
            "type": "string",
            "description": "Optional message explaining the result code, if necessary."
          },
          "ok": {
            "type": "boolean",
            "description": "`true` means the application processed the message normally and without errors."
          }
        },
        "required": ["code", "ok"],
        "description": "Standard meta information for the API response, explaining the processing result."
      },
      "User_Profile": {
        "type": "object",
        "properties": {
          "dateBirth": {
            "type": "string",
            "format": "date",
            "description": "User's date of birth in YYYY-MM-DD format."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "description": "Date-time when the user registered."
          },
          "dateSubscriptionEnd": {
            "type": "string",
            "format": "date-time",
            "description": "Date-time when the user's subscription expires."
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "description": "Date-time of the last profile update."
          },
          "goal": {
            "type": "string",
            "description": "User's current goal (e.g., weight loss target)."
          },
          "height": {
            "type": "number",
            "description": "User's height in cm."
          },
          "locale": {
            "type": "string",
            "description": "User's language preference locale (e.g., 'en', 'fr')."
          },
          "name": {
            "type": "string",
            "description": "User's name as displayed in the profile."
          },
          "sex": {
            "type": "string",
            "enum": ["FEMALE", "MALE", "UNDEFINED"],
            "description": "Biological sex with values representing male and female categories."
          },
          "timezone": {
            "type": "string",
            "description": "User's timezone, formatted as IANA identifier (e.g., 'Europe/Riga')."
          },
          "uuid": {
            "type": "string",
            "description": "Universally unique identifier as public ID."
          },
          "weight": {
            "type": "number",
            "description": "User's weight in grams."
          }
        },
        "required": ["dateBirth", "dateCreated", "goal", "height", "locale", "name", "sex", "timezone", "weight"],
        "description": "User profile details including personal and physical information."
      }
    }
  }
}